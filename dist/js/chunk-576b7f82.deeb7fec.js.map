{"version":3,"sources":["webpack:///./node_modules/vue-google-autocomplete/src/VueGoogleAutocomplete.vue?a2a6","webpack:///node_modules/vue-google-autocomplete/src/VueGoogleAutocomplete.vue","webpack:///./node_modules/vue-google-autocomplete/src/VueGoogleAutocomplete.vue?ff4c","webpack:///./node_modules/vue-google-autocomplete/src/VueGoogleAutocomplete.vue","webpack:///./node_modules/core-js/modules/es6.string.includes.js","webpack:///./node_modules/core-js/library/modules/_object-pie.js","webpack:///./node_modules/core-js/library/fn/get-iterator.js","webpack:///./node_modules/core-js/modules/_fails-is-regexp.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/assign.js","webpack:///./node_modules/core-js/library/fn/object/assign.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/get-iterator.js","webpack:///./node_modules/image-compressor.js/dist/image-compressor.esm.js","webpack:///./node_modules/core-js/modules/es7.array.includes.js","webpack:///./node_modules/core-js/library/modules/core.get-iterator.js","webpack:///./node_modules/core-js/modules/es6.function.name.js","webpack:///./node_modules/core-js/library/modules/_object-assign.js","webpack:///./node_modules/core-js/library/modules/_object-gops.js","webpack:///./node_modules/core-js/library/modules/es6.object.assign.js","webpack:///./node_modules/core-js/modules/_string-context.js"],"names":["render","_vm","this","_h","$createElement","_c","_self","directives","name","rawName","value","expression","ref","class","classname","attrs","type","id","placeholder","domProps","on","focus","$event","onFocus","blur","onBlur","change","onChange","keypress","onKeyPress","keyup","onKeyUp","input","target","composing","autocompleteText","staticRenderFns","ADDRESS_COMPONENTS","street_number","route","locality","administrative_area_level_1","administrative_area_level_2","country","postal_code","CITIES_TYPE","REGIONS_TYPE","VueGoogleAutocompletevue_type_script_lang_js_","props","String","required","default","types","Array","enableGeolocation","Boolean","geolocationOptions","Object","data","autocomplete","geolocation","geocoder","loc","position","watch","newVal","oldVal","$emit","setComponentRestrictions","mounted","options","componentRestrictions","google","maps","places","Autocomplete","document","getElementById","addListener","onPlaceChanged","methods","place","getPlace","geometry","undefined","address_components","formatResult","biasAutocompleteLocation","event","clear","$refs","update","updateCoordinates","_this","lat","lng","Geocoder","geocode","location","results","status","filterGeocodeResultTypes","formatted_address","geolocate","_this2","updateGeolocation","_this3","callback","arguments","length","navigator","assign_default","getCurrentPosition","coords","latitude","longitude","err","_this4","circle","Circle","center","radius","accuracy","setBounds","getBounds","returnData","i","addressType","val","output","includes","concat","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","get_iterator_default","next","done","r","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","t","push","return","src_VueGoogleAutocompletevue_type_script_lang_js_","component","componentNormalizer","__webpack_exports__","$export","__webpack_require__","context","INCLUDES","P","F","searchString","indexOf","exports","f","propertyIsEnumerable","module","MATCH","KEY","re","e","assign","createCommonjsModule","fn","canvasToBlob","window","CanvasPrototype","HTMLCanvasElement","prototype","hasBlobConstructor","Blob","hasArrayBufferViewSupport","Uint8Array","size","BlobBuilder","WebKitBlobBuilder","MozBlobBuilder","MSBlobBuilder","dataURIPattern","dataURLtoBlob","atob","ArrayBuffer","dataURI","matches","mediaType","isBase64","dataString","byteString","arrayBuffer","intArray","bb","match","Error","slice","decodeURIComponent","charCodeAt","append","getBlob","toBlob","mozGetAsFile","quality","self","setTimeout","toDataURL","toString","isBlob","x","call","DEFAULTS","checkOrientation","maxWidth","Infinity","maxHeight","minWidth","minHeight","width","height","mimeType","convertSize","beforeDraw","drew","success","error","REGEXP_IMAGE_TYPE","isImageType","test","imageTypeToExtension","includeDot","extension","substr","fromCharCode","getStringFromCharCode","dataView","start","str","getUint8","_window","btoa","arrayBufferToDataURL","uint8","forEach","getOrientation","DataView","orientation","littleEndian","app1Start","ifdStart","byteLength","offset","exifIDCode","tiffOffset","endianness","getUint16","firstIFDOffset","getUint32","_length","_offset","setUint16","parseOrientation","rotate","scaleX","scaleY","REGEXP_DECIMALS","normalizeDecimalNumber","times","Math","round","classCallCheck","instance","Constructor","TypeError","createClass","defineProperties","descriptor","enumerable","configurable","writable","defineProperty","key","protoProps","staticProps","_extends","source","hasOwnProperty","_window$1","ArrayBuffer$1","FileReader","URL","webkitURL","REGEXP_EXTENSION","ImageCompressor","file","result","compress","image","Image","Promise","resolve","reject","url","createObjectURL","reader","onload","_ref","onabort","onerror","readAsArrayBuffer","readAsDataURL","then","naturalWidth","naturalHeight","alt","src","_ref2","_ref2$rotate","_ref2$scaleX","_ref2$scaleY","canvas","createElement","getContext","aspectRatio","max","_options","_options2","min","destX","destY","destWidth","destHeight","abs","_width$height","defaultFillStyle","fillStyle","fillRect","save","translate","PI","scale","drawImage","floor","restore","_ref3","revokeObjectURL","date","Date","lastModified","getTime","lastModifiedDate","replace","catch","$includes","el","anObject","get","getIterator","it","iterFn","dP","FProto","Function","nameRE","NAME","getKeys","gOPS","pIE","toObject","IObject","$assign","A","B","S","Symbol","K","split","k","keys","join","T","aLen","index","getSymbols","isEnum","j","getOwnPropertySymbols","isRegExp","defined","that"],"mappings":"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","file":"js/chunk-576b7f82.deeb7fec.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.autocompleteText),expression:\"autocompleteText\"}],ref:\"autocomplete\",class:_vm.classname,attrs:{\"type\":\"text\",\"id\":_vm.id,\"placeholder\":_vm.placeholder},domProps:{\"value\":(_vm.autocompleteText)},on:{\"focus\":function($event){return _vm.onFocus()},\"blur\":function($event){return _vm.onBlur()},\"change\":_vm.onChange,\"keypress\":_vm.onKeyPress,\"keyup\":_vm.onKeyUp,\"input\":function($event){if($event.target.composing){ return; }_vm.autocompleteText=$event.target.value}}})}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n    <input\n        ref=\"autocomplete\"\n        type=\"text\"\n        :class=\"classname\"\n        :id=\"id\"\n        :placeholder=\"placeholder\"\n        v-model=\"autocompleteText\"\n        @focus=\"onFocus()\"\n        @blur=\"onBlur()\"\n        @change=\"onChange\"\n        @keypress=\"onKeyPress\"\n        @keyup=\"onKeyUp\"\n    />\n</template>\n\n<script>\n    const ADDRESS_COMPONENTS = {\n        street_number: 'short_name',\n        route: 'long_name',\n        locality: 'long_name',\n        administrative_area_level_1: 'short_name',\n        administrative_area_level_2: 'county',\n        country: 'long_name',\n        postal_code: 'short_name'\n    };\n\n    const CITIES_TYPE = ['locality', 'administrative_area_level_3'];\n    const REGIONS_TYPE = ['locality', 'sublocality', 'postal_code', 'country',\n        'administrative_area_level_1', 'administrative_area_level_2'];\n\n    export default {\n        name: 'VueGoogleAutocomplete',\n\n        props: {\n          id: {\n            type: String,\n            required: true\n          },\n\n          classname: String,\n\n          placeholder: {\n            type: String,\n            default: 'Start typing'\n          },\n\n          types: {\n            type: String,\n            default: 'address'\n          },\n\n          country: {\n            type: [String, Array],\n            default: null\n          },\n\n          enableGeolocation: {\n            type: Boolean,\n            default: false\n          },\n\n          geolocationOptions: {\n            type: Object,\n            default: null\n          }\n        },\n\n        data() {\n            return {\n                /**\n                 * The Autocomplete object.\n                 *\n                 * @type {Autocomplete}\n                 * @link https://developers.google.com/maps/documentation/javascript/reference#Autocomplete\n                 */\n                autocomplete: null,\n\n                /**\n                 * Autocomplete input text\n                 * @type {String}\n                 */\n                autocompleteText: '',\n\n                geolocation: {\n                    /**\n                     * Google Geocoder Objet\n                     * @type {Geocoder}\n                     * @link https://developers.google.com/maps/documentation/javascript/reference#Geocoder\n                     */\n                    geocoder: null,\n\n                    /**\n                     * Filled after geolocate result\n                     * @type {Coordinates}\n                     * @link https://developer.mozilla.org/en-US/docs/Web/API/Coordinates\n                     */\n                    loc: null,\n\n                    /**\n                     * Filled after geolocate result\n                     * @type {Position}\n                     * @link https://developer.mozilla.org/en-US/docs/Web/API/Position\n                     */\n                    position: null\n                }\n            }\n        },\n\n        watch: {\n            autocompleteText: function (newVal, oldVal) {\n\t            this.$emit('inputChange', { newVal, oldVal }, this.id);\n            },\n            country: function(newVal, oldVal) {\n              this.autocomplete.setComponentRestrictions({\n                country: this.country === null ? [] : this.country\n              });\n            }\n        },\n\n        mounted: function() {\n          const options = {};\n\n          if (this.types) {\n            options.types = [this.types];\n          }\n\n          if (this.country) {\n            options.componentRestrictions = {\n              country: this.country\n            };\n          }\n\n          this.autocomplete = new google.maps.places.Autocomplete(\n                document.getElementById(this.id),\n                options\n            );\n\n          this.autocomplete.addListener('place_changed', this.onPlaceChanged);\n        },\n\n        methods: {\n            /**\n             * When a place changed\n             */\n            onPlaceChanged() {\n                let place = this.autocomplete.getPlace();\n\n                if (!place.geometry) {\n                  // User entered the name of a Place that was not suggested and\n                  // pressed the Enter key, or the Place Details request failed.\n                  this.$emit('no-results-found', place, this.id);\n                  return;\n                }\n\n                if (place.address_components !== undefined) {\n                    // return returnData object and PlaceResult object\n                    this.$emit('placechanged', this.formatResult(place), place, this.id);\n\n                    // update autocompleteText then emit change event\n                    this.autocompleteText = document.getElementById(this.id).value\n                    this.onChange()\n                }\n            },\n\n            /**\n             * When the input gets focus\n             */\n            onFocus() {\n              this.biasAutocompleteLocation();\n              this.$emit('focus');\n            },\n\n            /**\n             * When the input loses focus\n             */\n            onBlur() {\n              this.$emit('blur');\n            },\n\n            /**\n             * When the input got changed\n             */\n            onChange() {\n              this.$emit('change', this.autocompleteText);\n            },\n\n            /**\n             * When a key gets pressed\n             * @param  {Event} event A keypress event\n             */\n            onKeyPress(event) {\n              this.$emit('keypress', event);\n            },\n\n            /**\n             * When a keyup occurs\n             * @param  {Event} event A keyup event\n             */\n            onKeyUp(event) {\n              this.$emit('keyup', event);\n            },\n\n            /**\n             * Clear the input\n             */\n            clear() {\n              this.autocompleteText = ''\n            },\n\n            /**\n             * Focus the input\n             */\n            focus() {\n              this.$refs.autocomplete.focus()\n            },\n\n            /**\n             * Blur the input\n             */\n            blur() {\n              this.$refs.autocomplete.blur()\n            },\n\n            /**\n             * Update the value of the input\n             * @param  {String} value\n             */\n            update (value) {\n              this.autocompleteText = value\n            },\n\n            /**\n             * Update the coordinates of the input\n             * @param  {Coordinates} value\n             */\n            updateCoordinates (value) {\n                if (!value && !(value.lat || value.lng)) return;\n                if (!this.geolocation.geocoder) this.geolocation.geocoder = new google.maps.Geocoder();\n                this.geolocation.geocoder.geocode({'location': value}, (results, status) => {\n                    if (status === 'OK') {\n                        results = this.filterGeocodeResultTypes(results);\n                        if (results[0]) {\n                            this.$emit('placechanged', this.formatResult(results[0]), results[0], this.id);\n                            this.update(results[0].formatted_address);\n                        } else {\n                            this.$emit('error', 'no result for provided coordinates');\n                        }\n                    } else {\n                        this.$emit('error', 'error getting address from coords');\n                    }\n                })\n            },\n\n            /**\n             * Update location based on navigator geolocation\n             */\n            geolocate () {\n                this.updateGeolocation ((geolocation, position) => {\n                    this.updateCoordinates(geolocation)\n                })\n            },\n\n            /**\n             * Update internal location from navigator geolocation\n             * @param  {Function} (geolocation, position)\n             */\n            updateGeolocation (callback = null) {\n                if (navigator.geolocation) {\n                    let options = {};\n                    if(this.geolocationOptions) Object.assign(options, this.geolocationOptions);\n                    navigator.geolocation.getCurrentPosition(position => {\n                        let geolocation = {\n                            lat: position.coords.latitude,\n                            lng: position.coords.longitude\n                        };\n                        this.geolocation.loc = geolocation;\n                        this.geolocation.position = position;\n\n                        if (callback) callback(geolocation, position);\n                    }, err => {\n                        this.$emit('error', 'Cannot get Coordinates from navigator', err);\n                    }, options);\n                }\n            },\n\n\n            // Bias the autocomplete object to the user's geographical location,\n            // as supplied by the browser's 'navigator.geolocation' object.\n            biasAutocompleteLocation () {\n                if (this.enableGeolocation) {\n                    this.updateGeolocation((geolocation, position) => {\n                        let circle = new google.maps.Circle({\n                            center: geolocation,\n                            radius: position.coords.accuracy\n                        });\n                        this.autocomplete.setBounds(circle.getBounds());\n                    })\n                }\n            },\n\n            /**\n             * Format result from Geo google APIs\n             * @param place\n             * @returns {{formatted output}}\n             */\n            formatResult (place) {\n                let returnData = {};\n                for (let i = 0; i < place.address_components.length; i++) {\n                    let addressType = place.address_components[i].types[0];\n\n                    if (ADDRESS_COMPONENTS[addressType]) {\n                        let val = place.address_components[i][ADDRESS_COMPONENTS[addressType]];\n                        returnData[addressType] = val;\n                    }\n                }\n\n                returnData['latitude'] = place.geometry.location.lat();\n                returnData['longitude'] = place.geometry.location.lng();\n                return returnData\n            },\n\n            /**\n             * Extract configured types out of raw result as\n             * Geocode API does not allow to do it\n             * @param results\n             * @returns {GeocoderResult}\n             * @link https://developers.google.com/maps/documentation/javascript/reference#GeocoderResult\n             */\n            filterGeocodeResultTypes (results) {\n                if (!results || !this.types) return results;\n                let output = [];\n                let types = [this.types];\n                if (types.includes('(cities)')) types = types.concat(CITIES_TYPE);\n                if (types.includes('(regions)')) types = types.concat(REGIONS_TYPE);\n\n                for (let r of results) {\n                    for (let t of r.types) {\n                        if (types.includes(t)) {\n                            output.push(r);\n                            break;\n                        }\n                    }\n                }\n                return output;\n            }\n        }\n    }\n</script>\n","import mod from \"-!../../cache-loader/dist/cjs.js??ref--12-0!../../thread-loader/dist/cjs.js!../../babel-loader/lib/index.js!../../cache-loader/dist/cjs.js??ref--0-0!../../vue-loader/lib/index.js??vue-loader-options!./VueGoogleAutocomplete.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../cache-loader/dist/cjs.js??ref--12-0!../../thread-loader/dist/cjs.js!../../babel-loader/lib/index.js!../../cache-loader/dist/cjs.js??ref--0-0!../../vue-loader/lib/index.js??vue-loader-options!./VueGoogleAutocomplete.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./VueGoogleAutocomplete.vue?vue&type=template&id=2465da2f&\"\nimport script from \"./VueGoogleAutocomplete.vue?vue&type=script&lang=js&\"\nexport * from \"./VueGoogleAutocomplete.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","// 21.1.3.7 String.prototype.includes(searchString, position = 0)\n'use strict';\nvar $export = require('./_export');\nvar context = require('./_string-context');\nvar INCLUDES = 'includes';\n\n$export($export.P + $export.F * require('./_fails-is-regexp')(INCLUDES), 'String', {\n  includes: function includes(searchString /* , position = 0 */) {\n    return !!~context(this, searchString, INCLUDES)\n      .indexOf(searchString, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n","exports.f = {}.propertyIsEnumerable;\n","require('../modules/web.dom.iterable');\nrequire('../modules/es6.string.iterator');\nmodule.exports = require('../modules/core.get-iterator');\n","var MATCH = require('./_wks')('match');\nmodule.exports = function (KEY) {\n  var re = /./;\n  try {\n    '/./'[KEY](re);\n  } catch (e) {\n    try {\n      re[MATCH] = false;\n      return !'/./'[KEY](re);\n    } catch (f) { /* empty */ }\n  } return true;\n};\n","module.exports = require(\"core-js/library/fn/object/assign\");","require('../../modules/es6.object.assign');\nmodule.exports = require('../../modules/_core').Object.assign;\n","module.exports = require(\"core-js/library/fn/get-iterator\");","/*!\n * Image Compressor v1.1.4\n * https://xkeshi.github.io/image-compressor\n *\n * Copyright 2017-present Chen Fengyuan\n * Released under the MIT license\n *\n * Date: 2018-06-20T07:28:41.051Z\n */\n\nfunction createCommonjsModule(fn, module) {\n\treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n}\n\nvar canvasToBlob = createCommonjsModule(function (module) {\n(function (window) {\n\n  var CanvasPrototype =\n    window.HTMLCanvasElement && window.HTMLCanvasElement.prototype;\n  var hasBlobConstructor =\n    window.Blob &&\n    (function () {\n      try {\n        return Boolean(new Blob())\n      } catch (e) {\n        return false\n      }\n    })();\n  var hasArrayBufferViewSupport =\n    hasBlobConstructor &&\n    window.Uint8Array &&\n    (function () {\n      try {\n        return new Blob([new Uint8Array(100)]).size === 100\n      } catch (e) {\n        return false\n      }\n    })();\n  var BlobBuilder =\n    window.BlobBuilder ||\n    window.WebKitBlobBuilder ||\n    window.MozBlobBuilder ||\n    window.MSBlobBuilder;\n  var dataURIPattern = /^data:((.*?)(;charset=.*?)?)(;base64)?,/;\n  var dataURLtoBlob =\n    (hasBlobConstructor || BlobBuilder) &&\n    window.atob &&\n    window.ArrayBuffer &&\n    window.Uint8Array &&\n    function (dataURI) {\n      var matches,\n        mediaType,\n        isBase64,\n        dataString,\n        byteString,\n        arrayBuffer,\n        intArray,\n        i,\n        bb;\n      // Parse the dataURI components as per RFC 2397\n      matches = dataURI.match(dataURIPattern);\n      if (!matches) {\n        throw new Error('invalid data URI')\n      }\n      // Default to text/plain;charset=US-ASCII\n      mediaType = matches[2]\n        ? matches[1]\n        : 'text/plain' + (matches[3] || ';charset=US-ASCII');\n      isBase64 = !!matches[4];\n      dataString = dataURI.slice(matches[0].length);\n      if (isBase64) {\n        // Convert base64 to raw binary data held in a string:\n        byteString = atob(dataString);\n      } else {\n        // Convert base64/URLEncoded data component to raw binary:\n        byteString = decodeURIComponent(dataString);\n      }\n      // Write the bytes of the string to an ArrayBuffer:\n      arrayBuffer = new ArrayBuffer(byteString.length);\n      intArray = new Uint8Array(arrayBuffer);\n      for (i = 0; i < byteString.length; i += 1) {\n        intArray[i] = byteString.charCodeAt(i);\n      }\n      // Write the ArrayBuffer (or ArrayBufferView) to a blob:\n      if (hasBlobConstructor) {\n        return new Blob([hasArrayBufferViewSupport ? intArray : arrayBuffer], {\n          type: mediaType\n        })\n      }\n      bb = new BlobBuilder();\n      bb.append(arrayBuffer);\n      return bb.getBlob(mediaType)\n    };\n  if (window.HTMLCanvasElement && !CanvasPrototype.toBlob) {\n    if (CanvasPrototype.mozGetAsFile) {\n      CanvasPrototype.toBlob = function (callback, type, quality) {\n        var self = this;\n        setTimeout(function () {\n          if (quality && CanvasPrototype.toDataURL && dataURLtoBlob) {\n            callback(dataURLtoBlob(self.toDataURL(type, quality)));\n          } else {\n            callback(self.mozGetAsFile('blob', type));\n          }\n        });\n      };\n    } else if (CanvasPrototype.toDataURL && dataURLtoBlob) {\n      CanvasPrototype.toBlob = function (callback, type, quality) {\n        var self = this;\n        setTimeout(function () {\n          callback(dataURLtoBlob(self.toDataURL(type, quality)));\n        });\n      };\n    }\n  }\n  if (typeof undefined === 'function' && undefined.amd) {\n    undefined(function () {\n      return dataURLtoBlob\n    });\n  } else if (module.exports) {\n    module.exports = dataURLtoBlob;\n  } else {\n    window.dataURLtoBlob = dataURLtoBlob;\n  }\n})(window);\n});\n\n/* globals Blob */\nvar toString = Object.prototype.toString;\n\nvar isBlob = function (x) {\n\treturn x instanceof Blob || toString.call(x) === '[object Blob]';\n};\n\nvar DEFAULTS = {\n  /**\n   * Indicates if read the image's Exif Orientation information,\n   * and then rotate or flip the image automatically.\n   * @type {boolean}\n   */\n  checkOrientation: true,\n\n  /**\n   * The max width of the output image.\n   * @type {number}\n   */\n  maxWidth: Infinity,\n\n  /**\n   * The max height of the output image.\n   * @type {number}\n   */\n  maxHeight: Infinity,\n\n  /**\n   * The min width of the output image.\n   * @type {number}\n   */\n  minWidth: 0,\n\n  /**\n   * The min height of the output image.\n   * @type {number}\n   */\n  minHeight: 0,\n\n  /**\n   * The width of the output image.\n   * If not specified, the natural width of the source image will be used.\n   * @type {number}\n   */\n  width: undefined,\n\n  /**\n   * The height of the output image.\n   * If not specified, the natural height of the source image will be used.\n   * @type {number}\n   */\n  height: undefined,\n\n  /**\n   * The quality of the output image.\n   * It must be a number between `0` and `1`,\n   * and only available for `image/jpeg` and `image/webp` images.\n   * Check out {@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLCanvasElement/toBlob canvas.toBlob}.\n   * @type {number}\n   */\n  quality: 0.8,\n\n  /**\n   * The mime type of the output image.\n   * By default, the original mime type of the source image file will be used.\n   * @type {string}\n   */\n  mimeType: 'auto',\n\n  /**\n   * PNG files over this value (5M by default) will be converted to JPEGs.\n   * To disable this, just set the value to `Infinity`.\n   * Check out {@link https://github.com/xkeshi/image-compressor/issues/2 #2}.\n   * @type {number}\n   */\n  convertSize: 5000000,\n\n  /**\n   * The hook function to execute before draw the image into the canvas for compression.\n   * @type {Function}\n   * @param {CanvasRenderingContext2D} context - The 2d rendering context of the canvas.\n   * @param {HTMLCanvasElement} canvas - The canvas for compression.\n   * @example\n   * function (context, canvas) { context.fillStyle = '#fff' }\n   */\n  beforeDraw: null,\n\n  /**\n   * The hook function to execute after drew the image into the canvas for compression.\n   * @type {Function}\n   * @param {CanvasRenderingContext2D} context - The 2d rendering context of the canvas.\n   * @param {HTMLCanvasElement} canvas - The canvas for compression.\n   * @example\n   * function (context, canvas) { context.filter = grayscale(100%) }\n   */\n  drew: null,\n\n  /**\n   * The hook function to execute when success to compress the image.\n   * @type {Function}\n   * @param {File} file - The compressed image File object.\n   * @example\n   * function (file) { console.log(file) }\n   */\n  success: null,\n\n  /**\n   * The hook function to execute when fail to compress the image.\n   * @type {Function}\n   * @param {Error} err - An Error object.\n   * @example\n   * function (err) { console.log(err.message) }\n   */\n  error: null\n};\n\nvar REGEXP_IMAGE_TYPE = /^image\\/.+$/;\n\n/**\n * Check if the given value is a mime type of image.\n * @param {*} value - The value to check.\n * @returns {boolean} Returns `true` if the given is a mime type of image, else `false`.\n */\nfunction isImageType(value) {\n  return REGEXP_IMAGE_TYPE.test(value);\n}\n\n/**\n * Convert image type to extension.\n * @param {string} value - The image type to convert.\n * @param {boolean} [includeDot=true] - Include a leading dot or not.\n * @returns {boolean} Returns the image extension.\n */\nfunction imageTypeToExtension(value) {\n  var includeDot = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n  var extension = isImageType(value) ? value.substr(6) : '';\n\n  if (extension === 'jpeg') {\n    extension = 'jpg';\n  }\n\n  if (extension && includeDot) {\n    extension = '.' + extension;\n  }\n\n  return extension;\n}\n\nvar fromCharCode = String.fromCharCode;\n\n/**\n * Get string from char code in data view.\n * @param {DataView} dataView - The data view for read.\n * @param {number} start - The start index.\n * @param {number} length - The read length.\n * @returns {string} The read result.\n */\n\nfunction getStringFromCharCode(dataView, start, length) {\n  var str = '';\n  var i = void 0;\n\n  length += start;\n\n  for (i = start; i < length; i += 1) {\n    str += fromCharCode(dataView.getUint8(i));\n  }\n\n  return str;\n}\n\nvar _window = window,\n    btoa = _window.btoa;\n\n/**\n * Transform array buffer to Data URL.\n * @param {ArrayBuffer} arrayBuffer - The array buffer to transform.\n * @param {string} mimeType - The mime type of the Data URL.\n * @returns {string} The result Data URL.\n */\n\nfunction arrayBufferToDataURL(arrayBuffer, mimeType) {\n  var uint8 = new Uint8Array(arrayBuffer);\n  var data = '';\n\n  // TypedArray.prototype.forEach is not supported in some browsers as IE.\n  if (typeof uint8.forEach === 'function') {\n    uint8.forEach(function (value) {\n      data += fromCharCode(value);\n    });\n  } else {\n    var length = uint8.length;\n\n\n    for (var i = 0; i < length; i += 1) {\n      data += fromCharCode(uint8[i]);\n    }\n  }\n\n  return 'data:' + mimeType + ';base64,' + btoa(data);\n}\n\n/**\n * Get orientation value from given array buffer.\n * @param {ArrayBuffer} arrayBuffer - The array buffer to read.\n * @returns {number} The read orientation value.\n */\nfunction getOrientation(arrayBuffer) {\n  var dataView = new DataView(arrayBuffer);\n  var orientation = void 0;\n  var littleEndian = void 0;\n  var app1Start = void 0;\n  var ifdStart = void 0;\n\n  // Only handle JPEG image (start by 0xFFD8)\n  if (dataView.getUint8(0) === 0xFF && dataView.getUint8(1) === 0xD8) {\n    var length = dataView.byteLength;\n    var offset = 2;\n\n    while (offset < length) {\n      if (dataView.getUint8(offset) === 0xFF && dataView.getUint8(offset + 1) === 0xE1) {\n        app1Start = offset;\n        break;\n      }\n\n      offset += 1;\n    }\n  }\n\n  if (app1Start) {\n    var exifIDCode = app1Start + 4;\n    var tiffOffset = app1Start + 10;\n\n    if (getStringFromCharCode(dataView, exifIDCode, 4) === 'Exif') {\n      var endianness = dataView.getUint16(tiffOffset);\n\n      littleEndian = endianness === 0x4949;\n\n      if (littleEndian || endianness === 0x4D4D /* bigEndian */) {\n          if (dataView.getUint16(tiffOffset + 2, littleEndian) === 0x002A) {\n            var firstIFDOffset = dataView.getUint32(tiffOffset + 4, littleEndian);\n\n            if (firstIFDOffset >= 0x00000008) {\n              ifdStart = tiffOffset + firstIFDOffset;\n            }\n          }\n        }\n    }\n  }\n\n  if (ifdStart) {\n    var _length = dataView.getUint16(ifdStart, littleEndian);\n    var _offset = void 0;\n    var i = void 0;\n\n    for (i = 0; i < _length; i += 1) {\n      _offset = ifdStart + i * 12 + 2;\n\n      if (dataView.getUint16(_offset, littleEndian) === 0x0112 /* Orientation */) {\n          // 8 is the offset of the current tag's value\n          _offset += 8;\n\n          // Get the original orientation value\n          orientation = dataView.getUint16(_offset, littleEndian);\n\n          // Override the orientation with its default value\n          dataView.setUint16(_offset, 1, littleEndian);\n          break;\n        }\n    }\n  }\n\n  return orientation;\n}\n\n/**\n * Parse Exif Orientation value.\n * @param {number} orientation - The orientation to parse.\n * @returns {Object} The parsed result.\n */\nfunction parseOrientation(orientation) {\n  var rotate = 0;\n  var scaleX = 1;\n  var scaleY = 1;\n\n  switch (orientation) {\n    // Flip horizontal\n    case 2:\n      scaleX = -1;\n      break;\n\n    // Rotate left 180°\n    case 3:\n      rotate = -180;\n      break;\n\n    // Flip vertical\n    case 4:\n      scaleY = -1;\n      break;\n\n    // Flip vertical and rotate right 90°\n    case 5:\n      rotate = 90;\n      scaleY = -1;\n      break;\n\n    // Rotate right 90°\n    case 6:\n      rotate = 90;\n      break;\n\n    // Flip horizontal and rotate right 90°\n    case 7:\n      rotate = 90;\n      scaleX = -1;\n      break;\n\n    // Rotate left 90°\n    case 8:\n      rotate = -90;\n      break;\n\n    default:\n  }\n\n  return {\n    rotate: rotate,\n    scaleX: scaleX,\n    scaleY: scaleY\n  };\n}\n\nvar REGEXP_DECIMALS = /\\.\\d*(?:0|9){12}\\d*$/i;\n\n/**\n * Normalize decimal number.\n * Check out {@link http://0.30000000000000004.com/}\n * @param {number} value - The value to normalize.\n * @param {number} [times=100000000000] - The times for normalizing.\n * @returns {number} Returns the normalized number.\n */\nfunction normalizeDecimalNumber(value) {\n  var times = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 100000000000;\n\n  return REGEXP_DECIMALS.test(value) ? Math.round(value * times) / times : value;\n}\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _window$1 = window,\n    ArrayBuffer$1 = _window$1.ArrayBuffer,\n    FileReader = _window$1.FileReader;\n\nvar URL = window.URL || window.webkitURL;\nvar REGEXP_EXTENSION = /\\.\\w+$/;\n\n/**\n * Creates a new image compressor.\n * @class\n */\n\nvar ImageCompressor = function () {\n  /**\n   * The constructor of ImageCompressor.\n   * @param {File|Blob} file - The target image file for compressing.\n   * @param {Object} [options] - The options for compressing.\n   */\n  function ImageCompressor(file, options) {\n    classCallCheck(this, ImageCompressor);\n\n    this.result = null;\n\n    if (file) {\n      this.compress(file, options);\n    }\n  }\n\n  /**\n   * The main compress method.\n   * @param {File|Blob} file - The target image file for compressing.\n   * @param {Object} [options] - The options for compressing.\n   * @returns {Promise} - A Promise instance.\n   */\n\n\n  createClass(ImageCompressor, [{\n    key: 'compress',\n    value: function compress(file, options) {\n      var _this = this;\n\n      var image = new Image();\n\n      options = _extends({}, DEFAULTS, options);\n\n      if (!ArrayBuffer$1) {\n        options.checkOrientation = false;\n      }\n\n      return new Promise(function (resolve, reject) {\n        if (!isBlob(file)) {\n          reject(new Error('The first argument must be a File or Blob object.'));\n          return;\n        }\n\n        var mimeType = file.type;\n\n        if (!isImageType(mimeType)) {\n          reject(new Error('The first argument must be an image File or Blob object.'));\n          return;\n        }\n\n        if (!URL && !FileReader) {\n          reject(new Error('The current browser does not support image compression.'));\n          return;\n        }\n\n        if (URL && !options.checkOrientation) {\n          resolve({\n            url: URL.createObjectURL(file)\n          });\n        } else if (FileReader) {\n          var reader = new FileReader();\n          var checkOrientation = options.checkOrientation && mimeType === 'image/jpeg';\n\n          reader.onload = function (_ref) {\n            var target = _ref.target;\n            var result = target.result;\n\n\n            resolve(checkOrientation ? _extends({\n              url: arrayBufferToDataURL(result, mimeType)\n            }, parseOrientation(getOrientation(result))) : {\n              url: result\n            });\n          };\n          reader.onabort = function () {\n            reject(new Error('Aborted to load the image with FileReader.'));\n          };\n          reader.onerror = function () {\n            reject(new Error('Failed to load the image with FileReader.'));\n          };\n\n          if (checkOrientation) {\n            reader.readAsArrayBuffer(file);\n          } else {\n            reader.readAsDataURL(file);\n          }\n        }\n      }).then(function (data) {\n        return new Promise(function (resolve, reject) {\n          image.onload = function () {\n            return resolve(_extends({}, data, {\n              naturalWidth: image.naturalWidth,\n              naturalHeight: image.naturalHeight\n            }));\n          };\n          image.onabort = function () {\n            reject(new Error('Aborted to load the image.'));\n          };\n          image.onerror = function () {\n            reject(new Error('Failed to load the image.'));\n          };\n          image.alt = file.name;\n          image.src = data.url;\n        });\n      }).then(function (_ref2) {\n        var naturalWidth = _ref2.naturalWidth,\n            naturalHeight = _ref2.naturalHeight,\n            _ref2$rotate = _ref2.rotate,\n            rotate = _ref2$rotate === undefined ? 0 : _ref2$rotate,\n            _ref2$scaleX = _ref2.scaleX,\n            scaleX = _ref2$scaleX === undefined ? 1 : _ref2$scaleX,\n            _ref2$scaleY = _ref2.scaleY,\n            scaleY = _ref2$scaleY === undefined ? 1 : _ref2$scaleY;\n        return new Promise(function (resolve) {\n          var canvas = document.createElement('canvas');\n          var context = canvas.getContext('2d');\n          var aspectRatio = naturalWidth / naturalHeight;\n          var maxWidth = Math.max(options.maxWidth, 0) || Infinity;\n          var maxHeight = Math.max(options.maxHeight, 0) || Infinity;\n          var minWidth = Math.max(options.minWidth, 0) || 0;\n          var minHeight = Math.max(options.minHeight, 0) || 0;\n          var width = naturalWidth;\n          var height = naturalHeight;\n\n          if (maxWidth < Infinity && maxHeight < Infinity) {\n            if (maxHeight * aspectRatio > maxWidth) {\n              maxHeight = maxWidth / aspectRatio;\n            } else {\n              maxWidth = maxHeight * aspectRatio;\n            }\n          } else if (maxWidth < Infinity) {\n            maxHeight = maxWidth / aspectRatio;\n          } else if (maxHeight < Infinity) {\n            maxWidth = maxHeight * aspectRatio;\n          }\n\n          if (minWidth > 0 && minHeight > 0) {\n            if (minHeight * aspectRatio > minWidth) {\n              minHeight = minWidth / aspectRatio;\n            } else {\n              minWidth = minHeight * aspectRatio;\n            }\n          } else if (minWidth > 0) {\n            minHeight = minWidth / aspectRatio;\n          } else if (minHeight > 0) {\n            minWidth = minHeight * aspectRatio;\n          }\n\n          if (options.width > 0) {\n            var _options = options;\n            width = _options.width;\n\n            height = width / aspectRatio;\n          } else if (options.height > 0) {\n            var _options2 = options;\n            height = _options2.height;\n\n            width = height * aspectRatio;\n          }\n\n          width = Math.min(Math.max(width, minWidth), maxWidth);\n          height = Math.min(Math.max(height, minHeight), maxHeight);\n\n          var destX = -width / 2;\n          var destY = -height / 2;\n          var destWidth = width;\n          var destHeight = height;\n\n          if (Math.abs(rotate) % 180 === 90) {\n            var _width$height = {\n              width: height,\n              height: width\n            };\n            width = _width$height.width;\n            height = _width$height.height;\n          }\n\n          canvas.width = normalizeDecimalNumber(width);\n          canvas.height = normalizeDecimalNumber(height);\n\n          if (!isImageType(options.mimeType)) {\n            options.mimeType = file.type;\n          }\n\n          var defaultFillStyle = 'transparent';\n\n          // Converts PNG files over the `convertSize` to JPEGs.\n          if (file.size > options.convertSize && options.mimeType === 'image/png') {\n            defaultFillStyle = '#fff';\n            options.mimeType = 'image/jpeg';\n          }\n\n          // Override the default fill color (#000, black)\n          context.fillStyle = defaultFillStyle;\n          context.fillRect(0, 0, width, height);\n          context.save();\n          context.translate(width / 2, height / 2);\n          context.rotate(rotate * Math.PI / 180);\n          context.scale(scaleX, scaleY);\n\n          if (options.beforeDraw) {\n            options.beforeDraw.call(_this, context, canvas);\n          }\n\n          context.drawImage(image, Math.floor(normalizeDecimalNumber(destX)), Math.floor(normalizeDecimalNumber(destY)), Math.floor(normalizeDecimalNumber(destWidth)), Math.floor(normalizeDecimalNumber(destHeight)));\n\n          if (options.drew) {\n            options.drew.call(_this, context, canvas);\n          }\n\n          context.restore();\n\n          var done = function done(result) {\n            resolve({\n              naturalWidth: naturalWidth,\n              naturalHeight: naturalHeight,\n              result: result\n            });\n          };\n\n          if (canvas.toBlob) {\n            canvas.toBlob(done, options.mimeType, options.quality);\n          } else {\n            done(canvasToBlob(canvas.toDataURL(options.mimeType, options.quality)));\n          }\n        });\n      }).then(function (_ref3) {\n        var naturalWidth = _ref3.naturalWidth,\n            naturalHeight = _ref3.naturalHeight,\n            result = _ref3.result;\n\n        if (URL && !options.checkOrientation) {\n          URL.revokeObjectURL(image.src);\n        }\n\n        if (result) {\n          // Returns original file if the result is greater than it and without size related options\n          if (result.size > file.size && options.mimeType === file.type && !(options.width > naturalWidth || options.height > naturalHeight || options.minWidth > naturalWidth || options.minHeight > naturalHeight)) {\n            result = file;\n          } else {\n            var date = new Date();\n\n            result.lastModified = date.getTime();\n            result.lastModifiedDate = date;\n            result.name = file.name;\n\n            // Convert the extension to match its type\n            if (result.name && result.type !== file.type) {\n              result.name = result.name.replace(REGEXP_EXTENSION, imageTypeToExtension(result.type));\n            }\n          }\n        } else {\n          // Returns original file if the result is null in some cases.\n          result = file;\n        }\n\n        _this.result = result;\n\n        if (options.success) {\n          options.success.call(_this, result);\n        }\n\n        return Promise.resolve(result);\n      }).catch(function (err) {\n        if (!options.error) {\n          throw err;\n        }\n\n        options.error.call(_this, err);\n      });\n    }\n  }]);\n  return ImageCompressor;\n}();\n\nexport default ImageCompressor;\n","'use strict';\n// https://github.com/tc39/Array.prototype.includes\nvar $export = require('./_export');\nvar $includes = require('./_array-includes')(true);\n\n$export($export.P, 'Array', {\n  includes: function includes(el /* , fromIndex = 0 */) {\n    return $includes(this, el, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n\nrequire('./_add-to-unscopables')('includes');\n","var anObject = require('./_an-object');\nvar get = require('./core.get-iterator-method');\nmodule.exports = require('./_core').getIterator = function (it) {\n  var iterFn = get(it);\n  if (typeof iterFn != 'function') throw TypeError(it + ' is not iterable!');\n  return anObject(iterFn.call(it));\n};\n","var dP = require('./_object-dp').f;\nvar FProto = Function.prototype;\nvar nameRE = /^\\s*function ([^ (]*)/;\nvar NAME = 'name';\n\n// 19.2.4.2 name\nNAME in FProto || require('./_descriptors') && dP(FProto, NAME, {\n  configurable: true,\n  get: function () {\n    try {\n      return ('' + this).match(nameRE)[1];\n    } catch (e) {\n      return '';\n    }\n  }\n});\n","'use strict';\n// 19.1.2.1 Object.assign(target, source, ...)\nvar getKeys = require('./_object-keys');\nvar gOPS = require('./_object-gops');\nvar pIE = require('./_object-pie');\nvar toObject = require('./_to-object');\nvar IObject = require('./_iobject');\nvar $assign = Object.assign;\n\n// should work with symbols and should have deterministic property order (V8 bug)\nmodule.exports = !$assign || require('./_fails')(function () {\n  var A = {};\n  var B = {};\n  // eslint-disable-next-line no-undef\n  var S = Symbol();\n  var K = 'abcdefghijklmnopqrst';\n  A[S] = 7;\n  K.split('').forEach(function (k) { B[k] = k; });\n  return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;\n}) ? function assign(target, source) { // eslint-disable-line no-unused-vars\n  var T = toObject(target);\n  var aLen = arguments.length;\n  var index = 1;\n  var getSymbols = gOPS.f;\n  var isEnum = pIE.f;\n  while (aLen > index) {\n    var S = IObject(arguments[index++]);\n    var keys = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S);\n    var length = keys.length;\n    var j = 0;\n    var key;\n    while (length > j) if (isEnum.call(S, key = keys[j++])) T[key] = S[key];\n  } return T;\n} : $assign;\n","exports.f = Object.getOwnPropertySymbols;\n","// 19.1.3.1 Object.assign(target, source)\nvar $export = require('./_export');\n\n$export($export.S + $export.F, 'Object', { assign: require('./_object-assign') });\n","// helper for String#{startsWith, endsWith, includes}\nvar isRegExp = require('./_is-regexp');\nvar defined = require('./_defined');\n\nmodule.exports = function (that, searchString, NAME) {\n  if (isRegExp(searchString)) throw TypeError('String#' + NAME + \" doesn't accept regex!\");\n  return String(defined(that));\n};\n"],"sourceRoot":""}